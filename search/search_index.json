{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kubernetes Basics Guide","text":"<p>This comprehensive documentation is designed to help you understand and work with Kubernetes, the leading container orchestration platform.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>If you're new to Kubernetes, we recommend following these steps:</p> <ol> <li>Start with the Introduction to understand what Kubernetes is and why it's important</li> <li>Learn about Core Concepts to build your foundation</li> <li>Follow our Getting Started guide to set up your environment</li> <li>Deploy your First Application</li> </ol>"},{"location":"#what-youll-learn","title":"What You'll Learn","text":"<p>This guide covers:</p> <ul> <li>\u2705 Kubernetes fundamentals and architecture</li> <li>\u2705 Core concepts like Pods, Deployments, and Services</li> <li>\u2705 How to deploy and manage applications</li> <li>\u2705 Advanced topics like scaling and networking</li> <li>\u2705 Best practices for production environments</li> <li>\u2705 Troubleshooting common issues</li> </ul>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before diving in, make sure you have:</p> <ul> <li>Basic understanding of containers and Docker</li> <li>Familiarity with Linux command line</li> <li>Basic knowledge of networking concepts</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! If you'd like to improve this guide:</p> <ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Submit a pull request</li> </ol> <p>Happy learning! \ud83d\ude80</p>"},{"location":"core-concepts/configmaps-secrets/","title":"ConfigMaps and Secrets","text":"<p>ConfigMaps and Secrets are Kubernetes objects used to store configuration data and sensitive information separately from application code.</p>"},{"location":"core-concepts/configmaps-secrets/#configmaps","title":"ConfigMaps","text":""},{"location":"core-concepts/configmaps-secrets/#what-are-configmaps","title":"What are ConfigMaps?","text":"<ul> <li>Store non-confidential data</li> <li>Key-value pairs</li> <li>Can be mounted as volumes</li> <li>Can be used as environment variables</li> </ul>"},{"location":"core-concepts/configmaps-secrets/#creating-configmaps","title":"Creating ConfigMaps","text":""},{"location":"core-concepts/configmaps-secrets/#1-from-literal-values","title":"1. From Literal Values","text":"<pre><code>kubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#2-from-file","title":"2. From File","text":"<pre><code>kubectl create configmap my-config --from-file=path/to/file\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#3-from-directory","title":"3. From Directory","text":"<pre><code>kubectl create configmap my-config --from-file=path/to/directory\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#using-configmaps","title":"Using ConfigMaps","text":""},{"location":"core-concepts/configmaps-secrets/#1-as-environment-variables","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: my-image\n    envFrom:\n    - configMapRef:\n        name: my-config\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#2-as-volume","title":"2. As Volume","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: my-image\n    volumeMounts:\n    - name: config-volume\n      mountPath: /etc/config\n  volumes:\n  - name: config-volume\n    configMap:\n      name: my-config\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#secrets","title":"Secrets","text":""},{"location":"core-concepts/configmaps-secrets/#what-are-secrets","title":"What are Secrets?","text":"<ul> <li>Store sensitive data</li> <li>Base64 encoded</li> <li>Encrypted at rest (with proper configuration)</li> <li>More secure than ConfigMaps</li> </ul>"},{"location":"core-concepts/configmaps-secrets/#types-of-secrets","title":"Types of Secrets","text":"<ol> <li>Opaque (generic)</li> <li>docker-registry</li> <li>tls</li> <li>service-account-token</li> </ol>"},{"location":"core-concepts/configmaps-secrets/#creating-secrets","title":"Creating Secrets","text":""},{"location":"core-concepts/configmaps-secrets/#1-from-literal-values_1","title":"1. From Literal Values","text":"<pre><code>kubectl create secret generic my-secret --from-literal=username=admin --from-literal=password=secret\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#2-from-file_1","title":"2. From File","text":"<pre><code>kubectl create secret generic my-secret --from-file=path/to/file\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#3-tls-secret","title":"3. TLS Secret","text":"<pre><code>kubectl create secret tls my-tls --cert=path/to/cert --key=path/to/key\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#using-secrets","title":"Using Secrets","text":""},{"location":"core-concepts/configmaps-secrets/#1-as-environment-variables_1","title":"1. As Environment Variables","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: my-image\n    env:\n    - name: SECRET_USERNAME\n      valueFrom:\n        secretKeyRef:\n          name: my-secret\n          key: username\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#2-as-volume_1","title":"2. As Volume","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: my-image\n    volumeMounts:\n    - name: secret-volume\n      mountPath: /etc/secret\n  volumes:\n  - name: secret-volume\n    secret:\n      secretName: my-secret\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#best-practices","title":"Best Practices","text":""},{"location":"core-concepts/configmaps-secrets/#1-configmap-best-practices","title":"1. ConfigMap Best Practices","text":"<ul> <li>Use descriptive names</li> <li>Group related configurations</li> <li>Document configuration options</li> <li>Version control configuration files</li> </ul>"},{"location":"core-concepts/configmaps-secrets/#2-secret-best-practices","title":"2. Secret Best Practices","text":"<ul> <li>Never store in version control</li> <li>Use proper encryption</li> <li>Rotate secrets regularly</li> <li>Limit access to secrets</li> <li>Use RBAC for secret access</li> </ul>"},{"location":"core-concepts/configmaps-secrets/#3-security-considerations","title":"3. Security Considerations","text":"<ul> <li>Use network policies</li> <li>Implement proper access control</li> <li>Monitor secret access</li> <li>Use encryption at rest</li> </ul>"},{"location":"core-concepts/configmaps-secrets/#common-commands","title":"Common Commands","text":"<pre><code># List ConfigMaps\nkubectl get configmaps\n\n# List Secrets\nkubectl get secrets\n\n# Describe ConfigMap\nkubectl describe configmap my-config\n\n# Describe Secret\nkubectl describe secret my-secret\n\n# Delete ConfigMap\nkubectl delete configmap my-config\n\n# Delete Secret\nkubectl delete secret my-secret\n</code></pre>"},{"location":"core-concepts/configmaps-secrets/#next-steps","title":"Next Steps","text":"<p>Learn about Getting Started with Kubernetes to put these concepts into practice. </p>"},{"location":"core-concepts/deployments/","title":"Deployments","text":"<p>Deployments are Kubernetes objects that manage the deployment and scaling of Pods. They provide declarative updates for Pods and ReplicaSets.</p>"},{"location":"core-concepts/deployments/#what-is-a-deployment","title":"What is a Deployment?","text":"<p>A Deployment: - Manages a set of identical Pods - Ensures a specified number of Pods are running - Handles updates and rollbacks - Provides scaling capabilities</p>"},{"location":"core-concepts/deployments/#deployment-features","title":"Deployment Features","text":""},{"location":"core-concepts/deployments/#1-rolling-updates","title":"1. Rolling Updates","text":"<ul> <li>Zero-downtime deployments</li> <li>Controlled update process</li> <li>Automatic rollback on failure</li> </ul>"},{"location":"core-concepts/deployments/#2-scaling","title":"2. Scaling","text":"<ul> <li>Manual scaling</li> <li>Automatic scaling (with HPA)</li> <li>Replica management</li> </ul>"},{"location":"core-concepts/deployments/#3-rollback","title":"3. Rollback","text":"<ul> <li>Version history</li> <li>One-command rollback</li> <li>Status tracking</li> </ul>"},{"location":"core-concepts/deployments/#creating-a-deployment","title":"Creating a Deployment","text":""},{"location":"core-concepts/deployments/#basic-deployment","title":"Basic Deployment","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n</code></pre>"},{"location":"core-concepts/deployments/#deployment-management","title":"Deployment Management","text":""},{"location":"core-concepts/deployments/#1-creating","title":"1. Creating","text":"<pre><code>kubectl create -f deployment.yaml\nkubectl apply -f deployment.yaml\n</code></pre>"},{"location":"core-concepts/deployments/#2-updating","title":"2. Updating","text":"<pre><code>kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\nkubectl edit deployment nginx-deployment\n</code></pre>"},{"location":"core-concepts/deployments/#3-scaling","title":"3. Scaling","text":"<pre><code>kubectl scale deployment nginx-deployment --replicas=5\n</code></pre>"},{"location":"core-concepts/deployments/#4-rolling-back","title":"4. Rolling Back","text":"<pre><code>kubectl rollout undo deployment/nginx-deployment\nkubectl rollout undo deployment/nginx-deployment --to-revision=2\n</code></pre>"},{"location":"core-concepts/deployments/#deployment-strategies","title":"Deployment Strategies","text":""},{"location":"core-concepts/deployments/#1-rolling-update-default","title":"1. Rolling Update (Default)","text":"<pre><code>spec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n</code></pre>"},{"location":"core-concepts/deployments/#2-recreate","title":"2. Recreate","text":"<pre><code>spec:\n  strategy:\n    type: Recreate\n</code></pre>"},{"location":"core-concepts/deployments/#advanced-features","title":"Advanced Features","text":""},{"location":"core-concepts/deployments/#1-probes","title":"1. Probes","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - name: nginx\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n</code></pre>"},{"location":"core-concepts/deployments/#2-resource-limits","title":"2. Resource Limits","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - name: nginx\n        resources:\n          limits:\n            cpu: \"1\"\n            memory: \"512Mi\"\n          requests:\n            cpu: \"0.5\"\n            memory: \"256Mi\"\n</code></pre>"},{"location":"core-concepts/deployments/#3-node-selection","title":"3. Node Selection","text":"<pre><code>spec:\n  template:\n    spec:\n      nodeSelector:\n        disktype: ssd\n</code></pre>"},{"location":"core-concepts/deployments/#best-practices","title":"Best Practices","text":"<ol> <li>Version Control</li> <li>Use version tags for images</li> <li>Maintain deployment history</li> <li> <p>Document changes</p> </li> <li> <p>Resource Management</p> </li> <li>Set appropriate resource limits</li> <li>Monitor resource usage</li> <li> <p>Implement autoscaling</p> </li> <li> <p>Update Strategy</p> </li> <li>Choose appropriate strategy</li> <li>Set proper update parameters</li> <li> <p>Test updates in staging</p> </li> <li> <p>Monitoring</p> </li> <li>Track deployment status</li> <li>Monitor Pod health</li> <li>Set up alerts</li> </ol>"},{"location":"core-concepts/deployments/#common-commands","title":"Common Commands","text":"<pre><code># View deployments\nkubectl get deployments\n\n# View deployment details\nkubectl describe deployment nginx-deployment\n\n# View rollout status\nkubectl rollout status deployment/nginx-deployment\n\n# View rollout history\nkubectl rollout history deployment/nginx-deployment\n\n# Pause a rollout\nkubectl rollout pause deployment/nginx-deployment\n\n# Resume a rollout\nkubectl rollout resume deployment/nginx-deployment\n</code></pre>"},{"location":"core-concepts/pods/","title":"Pods","text":"<p>Pods are the smallest deployable units in Kubernetes. They represent a single instance of a running process in your cluster.</p>"},{"location":"core-concepts/pods/#what-is-a-pod","title":"What is a Pod?","text":"<p>A Pod is a group of one or more containers that: - Share the same network namespace - Share the same storage volumes - Are scheduled together on the same node - Share the same lifecycle</p>"},{"location":"core-concepts/pods/#pod-characteristics","title":"Pod Characteristics","text":""},{"location":"core-concepts/pods/#1-shared-resources","title":"1. Shared Resources","text":"<ul> <li>Network: Containers in a Pod share the same IP address and port space</li> <li>Storage: Volumes are shared between containers</li> <li>IPC: Containers can communicate using inter-process communication</li> </ul>"},{"location":"core-concepts/pods/#2-lifecycle","title":"2. Lifecycle","text":"<ul> <li>Created</li> <li>Running</li> <li>Succeeded/Failed</li> <li>Deleted</li> </ul>"},{"location":"core-concepts/pods/#pod-types","title":"Pod Types","text":""},{"location":"core-concepts/pods/#1-single-container-pods","title":"1. Single Container Pods","text":"<p>Most common type, running a single container:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    ports:\n    - containerPort: 80\n</code></pre>"},{"location":"core-concepts/pods/#2-multi-container-pods","title":"2. Multi-Container Pods","text":"<p>Containers that work together:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: web-app\nspec:\n  containers:\n  - name: web\n    image: nginx\n  - name: log-collector\n    image: fluentd\n</code></pre>"},{"location":"core-concepts/pods/#common-use-cases","title":"Common Use Cases","text":""},{"location":"core-concepts/pods/#1-sidecar-containers","title":"1. Sidecar Containers","text":"<ul> <li>Log collection</li> <li>Monitoring</li> <li>Data synchronization</li> </ul>"},{"location":"core-concepts/pods/#2-adapter-containers","title":"2. Adapter Containers","text":"<ul> <li>Data format conversion</li> <li>Protocol translation</li> </ul>"},{"location":"core-concepts/pods/#3-ambassador-containers","title":"3. Ambassador Containers","text":"<ul> <li>Proxy connections</li> <li>Service discovery</li> </ul>"},{"location":"core-concepts/pods/#pod-management","title":"Pod Management","text":""},{"location":"core-concepts/pods/#1-creating-pods","title":"1. Creating Pods","text":"<pre><code>kubectl create -f pod.yaml\nkubectl run nginx --image=nginx\n</code></pre>"},{"location":"core-concepts/pods/#2-viewing-pods","title":"2. Viewing Pods","text":"<pre><code>kubectl get pods\nkubectl describe pod &lt;pod-name&gt;\n</code></pre>"},{"location":"core-concepts/pods/#3-deleting-pods","title":"3. Deleting Pods","text":"<pre><code>kubectl delete pod &lt;pod-name&gt;\n</code></pre>"},{"location":"core-concepts/pods/#pod-configuration","title":"Pod Configuration","text":""},{"location":"core-concepts/pods/#1-resource-limits","title":"1. Resource Limits","text":"<pre><code>spec:\n  containers:\n  - name: nginx\n    resources:\n      limits:\n        cpu: \"1\"\n        memory: \"512Mi\"\n      requests:\n        cpu: \"0.5\"\n        memory: \"256Mi\"\n</code></pre>"},{"location":"core-concepts/pods/#2-environment-variables","title":"2. Environment Variables","text":"<pre><code>spec:\n  containers:\n  - name: nginx\n    env:\n    - name: ENV_VAR\n      value: \"value\"\n</code></pre>"},{"location":"core-concepts/pods/#3-volume-mounts","title":"3. Volume Mounts","text":"<pre><code>spec:\n  containers:\n  - name: nginx\n    volumeMounts:\n    - name: shared-data\n      mountPath: /data\n  volumes:\n  - name: shared-data\n    emptyDir: {}\n</code></pre>"},{"location":"core-concepts/pods/#best-practices","title":"Best Practices","text":"<ol> <li>One Process per Container</li> <li>Keep containers focused</li> <li>Easier to scale</li> <li> <p>Better isolation</p> </li> <li> <p>Resource Management</p> </li> <li>Set resource limits</li> <li>Define resource requests</li> <li> <p>Monitor usage</p> </li> <li> <p>Health Checks</p> </li> <li>Use liveness probes</li> <li>Implement readiness probes</li> <li> <p>Configure startup probes</p> </li> <li> <p>Security</p> </li> <li>Run as non-root</li> <li>Use security contexts</li> <li>Implement network policies</li> </ol>"},{"location":"core-concepts/pods/#next-steps","title":"Next Steps","text":"<p>Learn about Deployments to manage your Pods effectively in production environments. </p>"},{"location":"core-concepts/services/","title":"Services","text":"<p>Services in Kubernetes provide a stable IP address and DNS name for a set of Pods, enabling network access to your applications.</p>"},{"location":"core-concepts/services/#what-is-a-service","title":"What is a Service?","text":"<p>A Service: - Provides stable networking for Pods - Enables load balancing - Supports service discovery - Handles Pod failures gracefully</p>"},{"location":"core-concepts/services/#service-types","title":"Service Types","text":""},{"location":"core-concepts/services/#1-clusterip-default","title":"1. ClusterIP (Default)","text":"<ul> <li>Internal IP address</li> <li>Accessible only within cluster</li> <li>Basic service type</li> </ul> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9376\n</code></pre>"},{"location":"core-concepts/services/#2-nodeport","title":"2. NodePort","text":"<ul> <li>Exposes service on each Node's IP</li> <li>Accessible from outside cluster</li> <li>Static port on each Node</li> </ul> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  type: NodePort\n  selector:\n    app: MyApp\n  ports:\n    - port: 80\n      targetPort: 9376\n      nodePort: 30007\n</code></pre>"},{"location":"core-concepts/services/#3-loadbalancer","title":"3. LoadBalancer","text":"<ul> <li>Cloud provider's load balancer</li> <li>External IP address</li> <li>Automatic load balancing</li> </ul> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  type: LoadBalancer\n  selector:\n    app: MyApp\n  ports:\n    - port: 80\n      targetPort: 9376\n</code></pre>"},{"location":"core-concepts/services/#4-externalname","title":"4. ExternalName","text":"<ul> <li>Maps service to external DNS name</li> <li>No selectors</li> <li>No proxying</li> </ul> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  type: ExternalName\n  externalName: my.database.example.com\n</code></pre>"},{"location":"core-concepts/services/#service-features","title":"Service Features","text":""},{"location":"core-concepts/services/#1-load-balancing","title":"1. Load Balancing","text":"<ul> <li>Round-robin by default</li> <li>Session affinity support</li> <li>Custom load balancing policies</li> </ul>"},{"location":"core-concepts/services/#2-service-discovery","title":"2. Service Discovery","text":"<ul> <li>DNS-based discovery</li> <li>Environment variables</li> <li>Cluster-wide accessibility</li> </ul>"},{"location":"core-concepts/services/#3-health-checking","title":"3. Health Checking","text":"<ul> <li>Endpoint health monitoring</li> <li>Automatic endpoint updates</li> <li>Failure handling</li> </ul>"},{"location":"core-concepts/services/#service-management","title":"Service Management","text":""},{"location":"core-concepts/services/#1-creating-services","title":"1. Creating Services","text":"<pre><code>kubectl create -f service.yaml\nkubectl expose deployment my-deployment --port=80 --target-port=9376\n</code></pre>"},{"location":"core-concepts/services/#2-viewing-services","title":"2. Viewing Services","text":"<pre><code>kubectl get services\nkubectl describe service my-service\n</code></pre>"},{"location":"core-concepts/services/#3-deleting-services","title":"3. Deleting Services","text":"<pre><code>kubectl delete service my-service\n</code></pre>"},{"location":"core-concepts/services/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"core-concepts/services/#1-session-affinity","title":"1. Session Affinity","text":"<pre><code>spec:\n  sessionAffinity: ClientIP\n  sessionAffinityConfig:\n    clientIP:\n      timeoutSeconds: 10800\n</code></pre>"},{"location":"core-concepts/services/#2-multiple-ports","title":"2. Multiple Ports","text":"<pre><code>spec:\n  ports:\n  - name: http\n    port: 80\n    targetPort: 9376\n  - name: https\n    port: 443\n    targetPort: 9377\n</code></pre>"},{"location":"core-concepts/services/#3-external-ips","title":"3. External IPs","text":"<pre><code>spec:\n  externalIPs:\n  - 80.11.12.10\n</code></pre>"},{"location":"core-concepts/services/#best-practices","title":"Best Practices","text":"<ol> <li>Service Naming</li> <li>Use descriptive names</li> <li>Follow naming conventions</li> <li> <p>Include environment if needed</p> </li> <li> <p>Port Management</p> </li> <li>Use named ports</li> <li>Document port usage</li> <li> <p>Avoid port conflicts</p> </li> <li> <p>Security</p> </li> <li>Use Network Policies</li> <li>Implement proper access control</li> <li> <p>Monitor service access</p> </li> <li> <p>Monitoring</p> </li> <li>Track service health</li> <li>Monitor endpoint status</li> <li>Set up alerts</li> </ol>"},{"location":"core-concepts/services/#common-commands","title":"Common Commands","text":"<pre><code># List all services\nkubectl get svc\n\n# Get service details\nkubectl describe svc my-service\n\n# Create service from deployment\nkubectl expose deployment my-deployment --port=80\n\n# Delete service\nkubectl delete svc my-service\n</code></pre>"},{"location":"getting-started/basic-commands/","title":"Basic Commands","text":"<p>This guide covers essential Kubernetes commands for managing your cluster and applications.</p>"},{"location":"getting-started/basic-commands/#cluster-information","title":"Cluster Information","text":""},{"location":"getting-started/basic-commands/#1-cluster-status","title":"1. Cluster Status","text":"<pre><code># Check cluster status\nkubectl cluster-info\n\n# Get cluster nodes\nkubectl get nodes\n\n# Get detailed node information\nkubectl describe nodes\n</code></pre>"},{"location":"getting-started/basic-commands/#2-version-information","title":"2. Version Information","text":"<pre><code># Client and server version\nkubectl version\n\n# Server version only\nkubectl version --short\n</code></pre>"},{"location":"getting-started/basic-commands/#working-with-pods","title":"Working with Pods","text":""},{"location":"getting-started/basic-commands/#1-pod-management","title":"1. Pod Management","text":"<pre><code># List all pods\nkubectl get pods\n\n# List pods with more details\nkubectl get pods -o wide\n\n# List pods in all namespaces\nkubectl get pods --all-namespaces\n\n# Get pod details\nkubectl describe pod &lt;pod-name&gt;\n\n# Delete a pod\nkubectl delete pod &lt;pod-name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#2-pod-logs","title":"2. Pod Logs","text":"<pre><code># View pod logs\nkubectl logs &lt;pod-name&gt;\n\n# Follow logs\nkubectl logs -f &lt;pod-name&gt;\n\n# View logs of a specific container\nkubectl logs &lt;pod-name&gt; -c &lt;container-name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#3-pod-interaction","title":"3. Pod Interaction","text":"<pre><code># Execute command in pod\nkubectl exec &lt;pod-name&gt; -- &lt;command&gt;\n\n# Get interactive shell\nkubectl exec -it &lt;pod-name&gt; -- /bin/bash\n\n# Copy files to/from pod\nkubectl cp &lt;pod-name&gt;:&lt;path&gt; &lt;local-path&gt;\nkubectl cp &lt;local-path&gt; &lt;pod-name&gt;:&lt;path&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#working-with-deployments","title":"Working with Deployments","text":""},{"location":"getting-started/basic-commands/#1-deployment-management","title":"1. Deployment Management","text":"<pre><code># List deployments\nkubectl get deployments\n\n# Create deployment\nkubectl create deployment &lt;name&gt; --image=&lt;image&gt;\n\n# Update deployment\nkubectl set image deployment/&lt;name&gt; &lt;container&gt;=&lt;image&gt;\n\n# Scale deployment\nkubectl scale deployment &lt;name&gt; --replicas=&lt;number&gt;\n\n# Delete deployment\nkubectl delete deployment &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#2-deployment-updates","title":"2. Deployment Updates","text":"<pre><code># View rollout status\nkubectl rollout status deployment/&lt;name&gt;\n\n# View rollout history\nkubectl rollout history deployment/&lt;name&gt;\n\n# Rollback to previous version\nkubectl rollout undo deployment/&lt;name&gt;\n\n# Rollback to specific revision\nkubectl rollout undo deployment/&lt;name&gt; --to-revision=&lt;number&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#working-with-services","title":"Working with Services","text":""},{"location":"getting-started/basic-commands/#1-service-management","title":"1. Service Management","text":"<pre><code># List services\nkubectl get services\n\n# Create service\nkubectl expose deployment &lt;name&gt; --port=&lt;port&gt; --target-port=&lt;target-port&gt;\n\n# Get service details\nkubectl describe service &lt;name&gt;\n\n# Delete service\nkubectl delete service &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#2-port-forwarding","title":"2. Port Forwarding","text":"<pre><code># Forward local port to pod\nkubectl port-forward &lt;pod-name&gt; &lt;local-port&gt;:&lt;pod-port&gt;\n\n# Forward local port to service\nkubectl port-forward service/&lt;service-name&gt; &lt;local-port&gt;:&lt;service-port&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#working-with-configmaps-and-secrets","title":"Working with ConfigMaps and Secrets","text":""},{"location":"getting-started/basic-commands/#1-configmap-management","title":"1. ConfigMap Management","text":"<pre><code># Create from literal\nkubectl create configmap &lt;name&gt; --from-literal=&lt;key&gt;=&lt;value&gt;\n\n# Create from file\nkubectl create configmap &lt;name&gt; --from-file=&lt;path&gt;\n\n# List configmaps\nkubectl get configmaps\n\n# Get configmap details\nkubectl describe configmap &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#2-secret-management","title":"2. Secret Management","text":"<pre><code># Create from literal\nkubectl create secret generic &lt;name&gt; --from-literal=&lt;key&gt;=&lt;value&gt;\n\n# Create from file\nkubectl create secret generic &lt;name&gt; --from-file=&lt;path&gt;\n\n# List secrets\nkubectl get secrets\n\n# Get secret details\nkubectl describe secret &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#namespace-management","title":"Namespace Management","text":"<pre><code># List namespaces\nkubectl get namespaces\n\n# Create namespace\nkubectl create namespace &lt;name&gt;\n\n# Switch namespace\nkubectl config set-context --current --namespace=&lt;name&gt;\n\n# Delete namespace\nkubectl delete namespace &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#resource-management","title":"Resource Management","text":""},{"location":"getting-started/basic-commands/#1-resource-quotas","title":"1. Resource Quotas","text":"<pre><code># List resource quotas\nkubectl get resourcequotas\n\n# Get quota details\nkubectl describe resourcequota &lt;name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#2-resource-usage","title":"2. Resource Usage","text":"<pre><code># Get resource usage\nkubectl top nodes\nkubectl top pods\n</code></pre>"},{"location":"getting-started/basic-commands/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/basic-commands/#1-common-issues","title":"1. Common Issues","text":"<pre><code># Get events\nkubectl get events\n\n# Get component status\nkubectl get componentstatuses\n\n# Check API resources\nkubectl api-resources\n</code></pre>"},{"location":"getting-started/basic-commands/#2-debugging","title":"2. Debugging","text":"<pre><code># Get detailed object information\nkubectl get &lt;resource&gt; &lt;name&gt; -o yaml\n\n# Get logs from all containers\nkubectl logs &lt;pod-name&gt; --all-containers\n\n# Check pod events\nkubectl describe pod &lt;pod-name&gt;\n</code></pre>"},{"location":"getting-started/basic-commands/#best-practices","title":"Best Practices","text":"<ol> <li>Command Organization</li> <li>Use consistent naming</li> <li>Document complex commands</li> <li> <p>Use aliases for common commands</p> </li> <li> <p>Resource Management</p> </li> <li>Clean up unused resources</li> <li>Monitor resource usage</li> <li> <p>Use namespaces effectively</p> </li> <li> <p>Security</p> </li> <li>Use RBAC</li> <li>Limit access to secrets</li> <li> <p>Follow least privilege principle</p> </li> <li> <p>Monitoring</p> </li> <li>Set up logging</li> <li>Configure alerts</li> <li>Track resource usage</li> </ol>"},{"location":"getting-started/first-application/","title":"First Application","text":"<p>This guide walks you through deploying your first application on Kubernetes. We'll create a simple web application and expose it to the world.</p>"},{"location":"getting-started/first-application/#prerequisites","title":"Prerequisites","text":"<ul> <li>A working Kubernetes cluster</li> <li>kubectl configured to communicate with your cluster</li> <li>Basic understanding of Kubernetes concepts</li> </ul>"},{"location":"getting-started/first-application/#step-1-create-a-deployment","title":"Step 1: Create a Deployment","text":"<p>Let's create a deployment for a simple web application.</p> <pre><code># nginx-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n</code></pre> <p>Apply the deployment:</p> <pre><code>kubectl apply -f nginx-deployment.yaml\n</code></pre>"},{"location":"getting-started/first-application/#step-2-verify-the-deployment","title":"Step 2: Verify the Deployment","text":"<p>Check the status of your deployment:</p> <pre><code>kubectl get deployments\nkubectl get pods\n</code></pre>"},{"location":"getting-started/first-application/#step-3-create-a-service","title":"Step 3: Create a Service","text":"<p>Now, let's create a service to expose the deployment:</p> <pre><code># nginx-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n  type: LoadBalancer\n</code></pre> <p>Apply the service:</p> <pre><code>kubectl apply -f nginx-service.yaml\n</code></pre>"},{"location":"getting-started/first-application/#step-4-access-the-application","title":"Step 4: Access the Application","text":""},{"location":"getting-started/first-application/#for-cloud-providers","title":"For Cloud Providers","text":"<pre><code>kubectl get service nginx-service\n</code></pre> <p>Wait for the external IP to be assigned, then access it in your browser.</p>"},{"location":"getting-started/first-application/#for-minikube","title":"For Minikube","text":"<pre><code>minikube service nginx-service\n</code></pre>"},{"location":"getting-started/first-application/#for-kind","title":"For Kind","text":"<pre><code>kubectl port-forward service/nginx-service 8080:80\n</code></pre> <p>Then access http://localhost:8080</p>"},{"location":"getting-started/first-application/#step-5-scale-the-application","title":"Step 5: Scale the Application","text":"<p>Scale the deployment to 5 replicas:</p> <pre><code>kubectl scale deployment nginx-deployment --replicas=5\n</code></pre>"},{"location":"getting-started/first-application/#step-6-update-the-application","title":"Step 6: Update the Application","text":"<p>Update the nginx image to a newer version:</p> <pre><code>kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1\n</code></pre>"},{"location":"getting-started/first-application/#step-7-monitor-the-update","title":"Step 7: Monitor the Update","text":"<p>Watch the rollout status:</p> <pre><code>kubectl rollout status deployment/nginx-deployment\n</code></pre>"},{"location":"getting-started/first-application/#step-8-rollback-if-needed","title":"Step 8: Rollback if Needed","text":"<p>If something goes wrong, rollback to the previous version:</p> <pre><code>kubectl rollout undo deployment/nginx-deployment\n</code></pre>"},{"location":"getting-started/first-application/#step-9-clean-up","title":"Step 9: Clean Up","text":"<p>When you're done, clean up the resources:</p> <pre><code>kubectl delete deployment nginx-deployment\nkubectl delete service nginx-service\n</code></pre>"},{"location":"getting-started/first-application/#best-practices","title":"Best Practices","text":"<ol> <li>Resource Management</li> <li>Set resource limits and requests</li> <li>Monitor resource usage</li> <li> <p>Implement proper scaling</p> </li> <li> <p>Health Checks</p> </li> <li>Add liveness and readiness probes</li> <li>Configure proper timeouts</li> <li> <p>Monitor application health</p> </li> <li> <p>Security</p> </li> <li>Use security contexts</li> <li>Implement network policies</li> <li> <p>Follow least privilege principle</p> </li> <li> <p>Monitoring</p> </li> <li>Set up logging</li> <li>Configure metrics collection</li> <li>Implement alerts</li> </ol>"},{"location":"getting-started/first-application/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"getting-started/first-application/#1-pods-not-starting","title":"1. Pods Not Starting","text":"<ul> <li>Check resource constraints</li> <li>Verify image availability</li> <li>Examine pod events</li> </ul>"},{"location":"getting-started/first-application/#2-service-not-accessible","title":"2. Service Not Accessible","text":"<ul> <li>Verify service type</li> <li>Check network policies</li> <li>Ensure proper port mapping</li> </ul>"},{"location":"getting-started/first-application/#3-update-failures","title":"3. Update Failures","text":"<ul> <li>Check image availability</li> <li>Verify resource constraints</li> <li>Monitor rollout status</li> </ul>"},{"location":"getting-started/first-application/#next-steps","title":"Next Steps","text":"<p>Learn about Basic Commands to manage your Kubernetes applications effectively. </p>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>This guide covers various methods to install Kubernetes, from local development environments to production clusters.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Kubernetes, ensure you have: - A supported operating system (Linux, macOS, Windows) - Minimum 2GB RAM per machine - 2 CPU cores per machine - Network connectivity between machines - Swap disabled (recommended) - Container runtime installed</p>"},{"location":"getting-started/installation/#local-development-options","title":"Local Development Options","text":""},{"location":"getting-started/installation/#1-minikube","title":"1. Minikube","text":"<p>Minikube is perfect for local Kubernetes development.</p>"},{"location":"getting-started/installation/#installation_1","title":"Installation","text":"<pre><code># macOS\nbrew install minikube\n\n# Linux\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n# Windows (PowerShell)\nchoco install minikube\n</code></pre>"},{"location":"getting-started/installation/#starting-minikube","title":"Starting Minikube","text":"<pre><code>minikube start\n</code></pre>"},{"location":"getting-started/installation/#2-docker-desktop","title":"2. Docker Desktop","text":"<p>Docker Desktop includes a single-node Kubernetes cluster.</p>"},{"location":"getting-started/installation/#installation_2","title":"Installation","text":"<ol> <li>Download Docker Desktop</li> <li>Enable Kubernetes in settings</li> <li>Start Docker Desktop</li> </ol>"},{"location":"getting-started/installation/#3-kind-kubernetes-in-docker","title":"3. Kind (Kubernetes in Docker)","text":"<p>Kind is a tool for running local Kubernetes clusters using Docker containers.</p>"},{"location":"getting-started/installation/#installation_3","title":"Installation","text":"<pre><code># macOS\nbrew install kind\n\n# Linux\ncurl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64\nchmod +x ./kind\nsudo mv ./kind /usr/local/bin/kind\n</code></pre>"},{"location":"getting-started/installation/#creating-a-cluster","title":"Creating a Cluster","text":"<pre><code>kind create cluster\n</code></pre>"},{"location":"getting-started/installation/#post-installation-steps","title":"Post-Installation Steps","text":""},{"location":"getting-started/installation/#1-verify-installation","title":"1. Verify Installation","text":"<pre><code>kubectl version\nkubectl get nodes\n</code></pre>"},{"location":"getting-started/installation/#2-install-network-plugin","title":"2. Install Network Plugin","text":"<pre><code># For Calico\nkubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n\n# For Flannel\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n</code></pre>"},{"location":"getting-started/installation/#3-test-cluster","title":"3. Test Cluster","text":"<pre><code>kubectl run nginx --image=nginx\nkubectl get pods\n</code></pre>"},{"location":"getting-started/installation/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"getting-started/installation/#1-port-conflicts","title":"1. Port Conflicts","text":"<ul> <li>Check for existing services using required ports</li> <li>Use different ports or stop conflicting services</li> </ul>"},{"location":"getting-started/installation/#2-network-issues","title":"2. Network Issues","text":"<ul> <li>Verify network connectivity</li> <li>Check firewall settings</li> <li>Ensure proper network plugin installation</li> </ul>"},{"location":"getting-started/installation/#3-resource-constraints","title":"3. Resource Constraints","text":"<ul> <li>Increase system resources</li> <li>Adjust Kubernetes resource limits</li> <li>Optimize container configurations</li> </ul>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After installation, proceed to First Application to deploy your first Kubernetes application. </p>"},{"location":"introduction/architecture/","title":"Kubernetes Architecture","text":"<p>Understanding Kubernetes architecture is crucial for effectively working with the platform. This section explains the key components and how they work together.</p>"},{"location":"introduction/architecture/#cluster-architecture","title":"Cluster Architecture","text":"<p>A Kubernetes cluster consists of two main parts: 1. Control Plane (Master Nodes) 2. Worker Nodes</p> <pre><code>graph TD\n    A[Control Plane] --&gt; B[Worker Nodes]\n    B --&gt; C[Pods]\n    C --&gt; D[Containers]\n</code></pre>"},{"location":"introduction/architecture/#control-plane-components","title":"Control Plane Components","text":""},{"location":"introduction/architecture/#1-api-server","title":"1. API Server","text":"<ul> <li>Central management point</li> <li>Exposes Kubernetes API</li> <li>Validates and processes requests</li> <li>Maintains cluster state</li> </ul>"},{"location":"introduction/architecture/#2-scheduler","title":"2. Scheduler","text":"<ul> <li>Assigns pods to nodes</li> <li>Considers resource requirements</li> <li>Handles constraints and affinity</li> <li>Optimizes resource utilization</li> </ul>"},{"location":"introduction/architecture/#3-controller-manager","title":"3. Controller Manager","text":"<ul> <li>Runs core control loops</li> <li>Watches shared state</li> <li>Makes changes to move current state to desired state</li> <li>Includes:</li> <li>Node Controller</li> <li>Replication Controller</li> <li>Endpoints Controller</li> <li>Service Account Controller</li> </ul>"},{"location":"introduction/architecture/#4-etcd","title":"4. etcd","text":"<ul> <li>Consistent and highly-available key-value store</li> <li>Stores cluster state</li> <li>Configuration data</li> <li>Service discovery information</li> </ul>"},{"location":"introduction/architecture/#node-components","title":"Node Components","text":""},{"location":"introduction/architecture/#1-kubelet","title":"1. Kubelet","text":"<ul> <li>Primary node agent</li> <li>Manages pod lifecycle</li> <li>Ensures containers are running</li> <li>Reports node status</li> </ul>"},{"location":"introduction/architecture/#2-container-runtime","title":"2. Container Runtime","text":"<ul> <li>Runs containers</li> <li>Supports multiple runtimes (Docker, containerd, CRI-O)</li> <li>Handles container operations</li> <li>Manages container images</li> </ul>"},{"location":"introduction/architecture/#3-kube-proxy","title":"3. Kube-proxy","text":"<ul> <li>Network proxy</li> <li>Maintains network rules</li> <li>Enables service discovery</li> <li>Handles load balancing</li> </ul>"},{"location":"introduction/architecture/#add-ons","title":"Add-ons","text":""},{"location":"introduction/architecture/#1-dns","title":"1. DNS","text":"<ul> <li>Cluster DNS server</li> <li>Service discovery</li> <li>Name resolution</li> </ul>"},{"location":"introduction/architecture/#2-dashboard","title":"2. Dashboard","text":"<ul> <li>Web-based UI</li> <li>Cluster management</li> <li>Monitoring</li> </ul>"},{"location":"introduction/architecture/#3-container-resource-monitoring","title":"3. Container Resource Monitoring","text":"<ul> <li>Metrics collection</li> <li>Performance monitoring</li> <li>Resource usage tracking</li> </ul>"},{"location":"introduction/architecture/#communication-flow","title":"Communication Flow","text":"<ol> <li>User submits request to API Server</li> <li>API Server validates request</li> <li>Scheduler assigns pods to nodes</li> <li>Kubelet on nodes creates containers</li> <li>Controllers maintain desired state</li> </ol>"},{"location":"introduction/architecture/#high-availability","title":"High Availability","text":"<p>For production environments: - Multiple control plane nodes - Load balanced API servers - Replicated etcd - Multiple worker nodes</p>"},{"location":"introduction/architecture/#security-considerations","title":"Security Considerations","text":"<ul> <li>Role-Based Access Control (RBAC)</li> <li>Network Policies</li> <li>Pod Security Policies</li> <li>Secrets Management</li> </ul>"},{"location":"introduction/architecture/#next-steps","title":"Next Steps","text":"<p>Now that you understand the architecture, learn about Core Concepts to start working with Kubernetes. </p>"},{"location":"introduction/what-is-kubernetes/","title":"What is Kubernetes?","text":"<p>Kubernetes (often abbreviated as K8s) is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications. It was originally developed by Google and is now maintained by the Cloud Native Computing Foundation (CNCF).</p>"},{"location":"introduction/what-is-kubernetes/#key-features","title":"Key Features","text":"<p>Kubernetes provides several powerful features:</p> <ul> <li>Container Orchestration: Manages the deployment and scaling of containerized applications</li> <li>Service Discovery and Load Balancing: Automatically assigns IP addresses and DNS names to containers</li> <li>Storage Orchestration: Mounts storage systems of your choice</li> <li>Automated Rollouts and Rollbacks: Gradually updates application instances</li> <li>Self-healing: Restarts failed containers and replaces them</li> <li>Secret and Configuration Management: Securely stores and manages sensitive information</li> <li>Automatic Bin Packing: Places containers based on resource requirements</li> </ul>"},{"location":"introduction/what-is-kubernetes/#why-k8s","title":"Why \"K8s\"?","text":"<p>The name \"Kubernetes\" comes from the Greek word for \"helmsman\" or \"pilot\". The abbreviation \"K8s\" is derived by replacing the 8 letters between the \"K\" and the \"s\" with the number 8.</p>"},{"location":"introduction/what-is-kubernetes/#kubernetes-vs-traditional-deployment","title":"Kubernetes vs. Traditional Deployment","text":"Aspect Traditional Deployment Kubernetes Scaling Manual Automatic High Availability Complex setup Built-in Resource Utilization Often inefficient Optimized Deployment Manual process Automated Monitoring Separate tools Integrated Updates Downtime required Zero-downtime"},{"location":"introduction/what-is-kubernetes/#core-components","title":"Core Components","text":"<p>Kubernetes consists of several components that work together:</p> <ol> <li>Control Plane: The brain of the cluster</li> <li>API Server</li> <li>Scheduler</li> <li>Controller Manager</li> <li> <p>etcd</p> </li> <li> <p>Nodes: The workers that run containers</p> </li> <li>Kubelet</li> <li>Container Runtime</li> <li>Kube-proxy</li> </ol>"},{"location":"introduction/what-is-kubernetes/#common-use-cases","title":"Common Use Cases","text":"<p>Kubernetes is used for:</p> <ul> <li>Microservices architecture</li> <li>Cloud-native applications</li> <li>CI/CD pipelines</li> <li>Machine learning workloads</li> <li>Big data processing</li> <li>Web applications</li> <li>Stateful applications</li> </ul>"},{"location":"introduction/what-is-kubernetes/#getting-started","title":"Getting Started","text":"<p>To start using Kubernetes, you'll need:</p> <ol> <li>A container runtime (like Docker)</li> <li>kubectl (Kubernetes command-line tool)</li> <li>A Kubernetes cluster (can be local or cloud-based)</li> </ol> <p>In the next section, we'll explore why Kubernetes is important in modern application development. </p>"},{"location":"introduction/why-kubernetes/","title":"Why Kubernetes?","text":"<p>Kubernetes has become the de facto standard for container orchestration in modern cloud-native applications. Here's why it's so important:</p>"},{"location":"introduction/why-kubernetes/#key-benefits","title":"Key Benefits","text":""},{"location":"introduction/why-kubernetes/#1-scalability","title":"1. Scalability","text":"<ul> <li>Horizontal Scaling: Easily scale applications up or down based on demand</li> <li>Automatic Scaling: Automatically adjust resources based on metrics</li> <li>Load Balancing: Distribute traffic across multiple instances</li> </ul>"},{"location":"introduction/why-kubernetes/#2-high-availability","title":"2. High Availability","text":"<ul> <li>Self-healing: Automatically restarts failed containers</li> <li>Rolling Updates: Update applications without downtime</li> <li>Multi-node Deployment: Run applications across multiple nodes</li> </ul>"},{"location":"introduction/why-kubernetes/#3-portability","title":"3. Portability","text":"<ul> <li>Cloud Agnostic: Run on any cloud provider or on-premises</li> <li>Consistent Environment: Same deployment process everywhere</li> <li>Hybrid Cloud Support: Seamlessly move between environments</li> </ul>"},{"location":"introduction/why-kubernetes/#4-resource-efficiency","title":"4. Resource Efficiency","text":"<ul> <li>Optimal Resource Usage: Better utilization of hardware resources</li> <li>Cost Savings: Reduce infrastructure costs through efficient resource allocation</li> <li>Bin Packing: Automatically place containers based on resource requirements</li> </ul>"},{"location":"introduction/why-kubernetes/#5-developer-productivity","title":"5. Developer Productivity","text":"<ul> <li>Declarative Configuration: Define desired state, not implementation</li> <li>Automated Operations: Reduce manual intervention</li> <li>Standardized Tooling: Consistent tools across environments</li> </ul>"},{"location":"introduction/why-kubernetes/#real-world-benefits","title":"Real-world Benefits","text":""},{"location":"introduction/why-kubernetes/#for-developers","title":"For Developers","text":"<ul> <li>Faster deployment cycles</li> <li>Consistent development environments</li> <li>Simplified application management</li> <li>Better collaboration between teams</li> </ul>"},{"location":"introduction/why-kubernetes/#for-operations","title":"For Operations","text":"<ul> <li>Automated deployment and scaling</li> <li>Improved monitoring and logging</li> <li>Better resource utilization</li> <li>Simplified maintenance</li> </ul>"},{"location":"introduction/why-kubernetes/#for-business","title":"For Business","text":"<ul> <li>Reduced infrastructure costs</li> <li>Faster time to market</li> <li>Improved reliability</li> <li>Better scalability</li> </ul>"},{"location":"introduction/why-kubernetes/#industry-adoption","title":"Industry Adoption","text":"<p>Kubernetes is widely adopted across industries: - Technology companies (Google, Microsoft, Amazon) - Financial services - Healthcare - E-commerce - Government agencies</p>"},{"location":"introduction/why-kubernetes/#future-proofing","title":"Future-Proofing","text":"<p>By adopting Kubernetes, organizations: - Stay current with industry standards - Prepare for future growth - Maintain flexibility in infrastructure choices - Enable innovation through modern tooling</p>"},{"location":"introduction/why-kubernetes/#getting-started","title":"Getting Started","text":"<p>Ready to start your Kubernetes journey? Check out our Getting Started guide to set up your first cluster.</p> <p>Next, learn about the Kubernetes Architecture to understand how all these benefits are achieved. </p>"}]}